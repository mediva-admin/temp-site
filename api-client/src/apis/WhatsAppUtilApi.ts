/* tslint:disable */
/* eslint-disable */
/**
 * Mediva API
 * Specification of the Mediva API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@mediva.in
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WhatsAppReportRequest,
} from '../models/index';

export interface SendWhatsAppReportRequest {
    whatsAppReportRequest: WhatsAppReportRequest;
}

/**
 * WhatsAppUtilApi - interface
 * 
 * @export
 * @interface WhatsAppUtilApiInterface
 */
export interface WhatsAppUtilApiInterface {
    /**
     * Sends a WhatsApp report message to a specified phone number. The report includes details about the queue and patient status. 
     * @summary Send WhatsApp report
     * @param {WhatsAppReportRequest} whatsAppReportRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WhatsAppUtilApiInterface
     */
    sendWhatsAppReportRaw(requestParameters: SendWhatsAppReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;

    /**
     * Sends a WhatsApp report message to a specified phone number. The report includes details about the queue and patient status. 
     * Send WhatsApp report
     */
    sendWhatsAppReport(whatsAppReportRequest: WhatsAppReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;

}

/**
 * 
 */
export class WhatsAppUtilApi extends runtime.BaseAPI implements WhatsAppUtilApiInterface {

    /**
     * Sends a WhatsApp report message to a specified phone number. The report includes details about the queue and patient status. 
     * Send WhatsApp report
     */
    async sendWhatsAppReportRaw(requestParameters: SendWhatsAppReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['whatsAppReportRequest'] == null) {
            throw new runtime.RequiredError(
                'whatsAppReportRequest',
                'Required parameter "whatsAppReportRequest" was null or undefined when calling sendWhatsAppReport().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("http-bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/api/whatsapp/send-report`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['whatsAppReportRequest'],
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Sends a WhatsApp report message to a specified phone number. The report includes details about the queue and patient status. 
     * Send WhatsApp report
     */
    async sendWhatsAppReport(whatsAppReportRequest: WhatsAppReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.sendWhatsAppReportRaw({ whatsAppReportRequest: whatsAppReportRequest }, initOverrides);
        return await response.value();
    }

}
